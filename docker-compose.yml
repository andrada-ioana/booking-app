version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost
    networks:
      - app-network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=mysqlpassword1234
      - DB_NAME=hotel_db
      - DB_PORT=3306
    volumes:
      - uploads-data:/usr/src/app/uploads
    networks:
      - app-network
    restart: always
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z db 3306; do
          sleep 1
        done &&
        echo 'Database is up!' &&
        npx sequelize-cli db:migrate &&
        npx sequelize-cli db:seed:all &&
        npm start
      "

  db:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=mysqlpassword1234
      - MYSQL_DATABASE=hotel_db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  uploads-data: 